#!/bin/bash

# import helpers
DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi
. "$DIR/utils/io.sh" --source-only

if command -v brew >/dev/null; then
  printGreenLine "Brew operational. Proceeding with installation."
else
  printRedLine "Error: this installation script is opinionated, and assumes the brew package manager is installed."
  echo -e "\tPlease ensure brew has been installed, following the directions for your current OS at https://brew.sh/"
  exit 1
fi

if command -v asdf >/dev/null; then
  printGreenLine "asdf: operational. Proceeding with installation..."
else
  printRedLine "Error: the asdf version manager cannot be found."
  echo -e "\tPlease ensure asdf has been installed and added to your PATH, following the directions at https://github.com/asdf-vm/asdf#setup"
  exit 1
fi

if asdf plugin-list | grep erlang >/dev/null; then
  printGreenLine "asdf: 'erlang' plugin already available. Ensuring latest.";
  asdf plugin update erlang
else
  printGreenLine "asdf: installing Erlang version-management plugin...";
  asdf plugin-add erlang https://github.com/HashNuke/asdf-erlang.git;
fi

printGreenLine "asdf: configuring KERL options...";

# see https://github.com/asdf-vm/asdf-erlang/issues/82#issuecomment-535868497 for configuring KERL
brew_open_ssl_path=$(brew info openssl | egrep -o -m 1 '/[^\S]* \(' | awk '{print $1}')
export KERL_CONFIGURE_OPTIONS="--without-javac --with-ssl=$brew_open_ssl_path"

printGreenLine "asdf: installing Erlang version declared in \`.tool-versions\`\n\n\tNOTE: Building erlang takes 5-10 minutes. Be patient.";
erlang_version=$(awk '/erlang/ { print $2 }' .tool-versions) && asdf install erlang ${erlang_version}

if asdf plugin-list | grep elixir >/dev/null; then
  printGreenLine "\nasdf: 'elixir' plugin already available. Skipping plugin installation!";
else
  printGreenLine "asdf: installing Elixir version-management plugin...";
  asdf plugin-add elixir https://github.com/HashNuke/asdf-elixir.git;
fi

printGreenLine "asdf: installing Elixir version declared in \`.tool-versions\`";
elixir_version=$(awk '/elixir/ { print $2 }' .tool-versions) && asdf install elixir ${elixir_version}

printGreenLine "Ensuring Elixir's 'hex' package manager is available and up to date";
mix local.hex --force

printGreenLine "Ensuring Erlang's 'rebar3' compilation tool is available and up to date";
mix local.rebar --force

printGreenLine "Cleaning dependencies, fetching fresh dependencies, and compiling for Elixir $elixir_version...";
rm -rf _build/
mix deps.clean --all
mix deps.get
mix deps.compile
mix compile
